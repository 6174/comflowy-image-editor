import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import _extends from"@babel/runtime/helpers/extends";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["id","name","scaleX","scaleY","rotation","annotationEvents","points","lineCap","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","tension","opacity"];import React,{useMemo}from"react";import{Line,Shape}from"react-konva";var LineNode=function(a){var b=a.id,c=a.name,d=a.scaleX,e=a.scaleY,f=a.rotation,g=a.annotationEvents,h=a.points,i=a.lineCap,j=a.stroke,k=a.strokeWidth,l=a.shadowOffsetX,m=a.shadowOffsetY,n=a.shadowBlur,o=a.shadowColor,p=a.shadowOpacity,q=a.tension,r=a.opacity,s=_objectWithoutProperties(a,_excluded),t=useMemo(function(){var a=simplifyPoints(h,1);return smoothPoints(a)},[h]);return React.createElement(Line,_extends({id:b,name:c,points:t,rotation:f,scaleX:d,scaleY:e,stroke:j,strokeWidth:k,shadowOffsetX:l,shadowOffsetY:m,shadowBlur:n,shadowColor:o,shadowOpacity:p,lineCap:i,tension:q,opacity:r},g,s))};function smoothPoints(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:.2;if(4>a.length)return a;for(var c=_toConsumableArray(a),d=2;d<c.length-2;d+=2)for(var e=0;2>e;e++){var f=c[d-2+e],g=c[d+e],h=c[d+2+e];c[d+e]=f*b/2+g*(1-b)+h*b/2}return c}function perpendicularDistance(a,b,c,d,e,f){var g=e-c,h=f-d;if(0==g&&0===h)return Math.sqrt(Math.pow(a-c,2)+Math.pow(b-d,2));var i=((a-c)*g+(b-d)*h)/(g*g+h*h);if(0>i)return Math.sqrt(Math.pow(a-c,2)+Math.pow(b-d,2));if(1<i)return Math.sqrt(Math.pow(a-e,2)+Math.pow(b-f,2));return Math.sqrt(Math.pow(a-(c+i*g),2)+Math.pow(b-(d+i*h),2))}function simplifyPoints(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:1;if(4>=a.length)return a;for(var c,d=0,e=0,f=a.length-2,g=2;g<f;g+=2)c=perpendicularDistance(a[g],a[g+1],a[0],a[1],a[f],a[f+1]),c>d&&(e=g,d=c);if(d<=b)return[a[0],a[1],a[f],a[f+1]];var h=simplifyPoints(a.slice(0,e+2),b),j=simplifyPoints(a.slice(e),b);return h.slice(0,-2).concat(j)}export default LineNode;